[% header('Indonesian stemming algorithm') %]

<h2>Links to resources</h2>

<ul>
[% algorithm_lis('indonesian', 'Indonesian', 'https://en.wikipedia.org/wiki/Indonesian_language') %]
<li> <a href="http://www.illc.uva.nl/Publications/ResearchReports/MoL-2003-02.text.pdf">"A Study of Stemming Effects on Information Retrieval in Bahasa Indonesia", Fadillah Z Tala</a>
</ul>

[% algorithm_vocab([22, 'ekolog', 'perak']) %]

<p>
This is an implementation of the "Porter Stemmer for Bahasa Indonesia" described
in:
</p>

<blockquote>
    Tala F Z (2003) A Study of Stemming Effects on Information Retrieval in Bahasa Indonesia. <i>M.S. thesis, University of Amsterdam.</i>
</blockquote>

<p>
It would be more accurately described as "Porter-style" or "Porter-inspired"
since Martin Porter wasn't directly involved in its development.
</p>

<p>
Our implementation attempts to be faithful to the algorithm described in the
paper, but we have had to address some places in the paper which are unclear,
and a case where an example doesn't match the described algorithm.
</p>

<ul>
<li>
<p>
In table 2.7 on page 9, the additional condition on the remaining stem for
removing the suffix "i" reads "V|K...c<sub>1</sub>c<sub>1</sub>, c<sub>1</sub>
&ne; s, c<sub>2</sub> &ne; i and prefix &notin; {ber, ke, peng}".
</p>

<p>
The meaning of this is unclear in several ways, and none of the
examples given of the stemmer's behaviour in the paper help to
resolve these issues.
</p>

  <ul>
  <li>
  <p>
  Notice that c<sub>2</sub> isn't actually used - the most obvious explanation
  seems to be that "c<sub>1</sub>c<sub>1</sub>" should read
  "c<sub>1</sub>c<sub>2</sub>", or maybe "c<sub>2</sub>c<sub>1</sub>".
  </p>
  </li>

  <li>
  <p>
  Elsewhere the paper defines V... as meaning "the stem starts with
  a vowel" and K... as meaning "the stem starts with a consonant".
  The meaning of | isn't actually defined, but clearly means alternation.
  </p>

  <p>
  However nowhere is the precedence of | vs ... defined, and there
  isn't a standard precedence we could reasonably assume.
  In other places where the paper says X|Y... it seems the | binds more
  tightly, so it's (V|K)...c<sub>i</sub>c<sub>j</sub> not
  V|(K...c<sub>i</sub>c<sub>j</sub>).  That seems a bit
  odd as the first letter must be either a vowel or a consonant, so
  that really just means "ends c<sub>i</sub>c<sub>j</sub>".  However, nowhere in
  the paper uses or defines a notation such as ...X, which may explain this
  seemingly redundant way of specifying this.
  </p>
  </li>

  <li>
  <p>
  The conditions elsewhere on prefix removal (e.g. V...) are clearly
  on the stem left after the prefix is removed.  None of the other
  rules for suffix removal have conditions on the stem, but for
  consistency with the prefix rules we might expect that the
  c<sub>i</sub>c<sub>j</sub> test is on what's left <em>after</em> removing the
  "i" suffix.
  </p>
  </li>
  </ul>

  <p>
  Studying Indonesian wordlists and discussion with a native
  speaker leads us to conclude that the purpose of this check is to
  protect words of foreign origin (e.g. "televisi", "organisasi",
  "komunikasi") from stemming, and the common feature of these is
  that the word ends "-si", so we conclude that the entire "additional
  condition" here should be read as "word does not end -si", and this is what
  we have implemented.
  </p>
</li>

<li>
<p>
On page 29, the example "kompas Q.31" says "Both Nazief and Porter stemmer
converted the word <i>peledakan</i> (blast, explotion) to <i>ledak</i> (to
blast, to explode)".  However, the algorithm as described doesn't behave in
this way - grammatically the prefix pe- occurs as a variation of both the
first-order derivational prefix peng- and the second-order derivational prefix
per-, but table 2.5 doesn't include "pe", only table 2.6 does, so "peledakan"
is handled (incorrectly) as having prefix "per" not "peng", and so we remove
derivational suffix "kan" rather than "an" to give stem <i>leda</i>.
(Porter-style stemmers remove the longest suffix they can amongst those
available, which this paper notes in the last paragraph on page 15).
</p>

<p>
We resolve this by amending the condition on suffix "kan" to "prefix &notin;
{ke, peng, per}", which seems to make the stemmer's behaviour match all the
examples in the paper except for one: "perbaikan" is shown in table 3.4
as stemming to "bai", but with this change it now stems to "baik".  The
table notes that "baik" is the actual root so this deviation is an
improvement.  In a sample vocabulary derived from the most common words in
id.wikipedia.org, this change only affects 0.12% of words (76 out of 64,587,
including "peledakan" and "perbaikan").
</p>
</li>

<li>
The paper has the condition on removal of prefix "bel" and "pel" as
just "ajar" not "ajar..." but it seems that the latter must be what
is intended so that e.g. "pelajaran" stems to "ajar" not "lajar".
This change only affects a very small number of words (11 out of
64,587), and only for the better.
</li>
</ul>

<h2>The full algorithm in Snowball</h2>

[% highlight_file('indonesian') %]

[% footer %]
