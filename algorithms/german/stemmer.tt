[% header('German stemming algorithm') %]

<h2>Links to resources</h2>

<ul>
<li> <A HREF="/algorithms/germanic.html"> Germanic language stemmers</A>
[% algorithm_lis('german', 'German') %]
</ul>

[% algorithm_vocab([40, 'aufeinander', 'kategorie']) %]

<h2>Design Notes</h2>

<p>
Despite its inflexional complexities, German has quite a simple suffix
structure, so that, if one ignores the almost intractable problems of
compound words, separable verb prefixes, and prefixed and infixed <B><I>ge</I></B>, an
algorithmic stemmer can be made quite short. (Infixed <B><I>zu</I></B> can be removed
algorithmically, but this minor feature is not shown here.) The umlaut in
German is a regular feature of plural formation, so its removal is a
natural feature of stemming, but this leads to certain false conflations
(for example, <I>sch&ouml;n</I>, beautiful; <I>schon</I>, already).
</p>

<p>
There are a few short suffixes (for example, <i>-t</i>) where
removal would cause problems so the stemmer leaves these alone - for example
<i>holen</i>, <i>hole</i>, <i>hol</i> and <i>holest</i> are stemmed to
<i>hol</i>; ideally <i>holt</i> would be too, but a rule to remove <i>-t</i>
would adversely affect too many other words.
</p>

<p>
For similar reasons, some suffixes are only removed when in <i>R</i>2: for
example <i>-end</i>.
</p>

<p>
Suffixes <i>-et</i>, <i>-s</i> and <i>-st</i> are removed in some cases.
The stemmer checks the end of the stem which would be left to determine when to
remove these suffixes, erring on the side of non-removal when it might be
problematic.
</p>

<p>
As with the other stemmers, words are assumed to be lower cased before
stemming.  This potentially loses information since nouns are always
capitalised in German, which results in some possibly avoidable conflations
(e.g. <i>Planet</i> means "planet" but <i>planet</i> is a form of the verb "to
plan").  However words are also capitalised for other reasons (e.g. at the
start of a sentence or in a title) so capitalisation is not a completely
reliable indicator.
</p>

<p>
In German, <b><i>ä</i></b>, <b><i>ö</i></b>, <b><i>ü</i></b> and
<b><i>ß</i></b> are sometimes transliterated as <b><i>ae</i></b>,
<b><i>oe</i></b>, <b><i>ue</i></b> and <b><i>ss</i></b> respectively.
There is now a capital version of <b><i>ss</i></b>, but it's a fairly
recent invention (added to Unicode in 2008) and prior to this in
capitalised text such as on street signs <b><i>SS</i></b> was used
instead.  Swiss German always uses <b><i>ss</i></b> instead of
<b><i>ß</i></b>, and also uses the transliterated forms for capital letters
with umlauts.  The German spelling reform of 1996 also reduced use of
<b><i>ß</i></b>, replacing it with <b><i>ss</i></b> in some words.
Finally (but much less relevant nowadays) these transliterations are
used when writing in character sets which lack these characters, or
with a keyboard lacking an easy way to type them.  The stemmer will
conflate words spelled using these characters with those spelled
using the transliterated versions.
</p>

<h3>Compound words</h3>

<p>
Famously, German allows for the formation of long compound words, written
without spaces. For retrieval purposes, it is useful to be able to search
on the parts of such words, as well as the on the complete words
themselves. This is not just peculiar to German: Dutch, Danish, Norwegian,
Swedish, Icelandic and Finnish have the same property. To split up
compound words cannot be done without a dictionary, and the purely
algorithmic stemmers presented here do not attempt it.
</p>

<p>
We would suggest, however, that the need for compound word splitting in
these languages has been somewhat overstated. In the case of German:
</p>

<ol>
<li>
<p>
There are many English compounds one would see no advantage in
splitting,
</p>

<DL><DD><TABLE CELLPADDING=0>
<TR><TD>    blackberry  <TD></TD><TD>  blackboard  <TD></TD><TD>  rainbow  <TD></TD><TD>  coastguard <TD></TD><TD> ....
</TABLE></DL>

<p>
Many German compounds are like this,
</p>

<DL><DD><TABLE CELLPADDING=0>
<TR><TD>    Bleistift (pencil)      <TD></TD><TD> = <TD></TD><TD> Blei (lead) + Stift (stick)
<TR><TD>    Eisenbahn (railway)     <TD></TD><TD> = <TD></TD><TD> Eisen (iron) + Bahn (road)
<TR><TD>    Unterseeboot (submarine)<TD></TD><TD> = <TD></TD><TD> under + sea + boat
</TABLE></DL>

<li>
<p>
Other compounds correspond to what in English one would want to do by
phrase searching, so they are ready made for that purpose,
</p>

<DL><DD><TABLE CELLPADDING=0>
<TR><TD>    Gesundheitspflege      <TD></TD><TD>  = <TD></TD><TD> &#8216;health care&#8217;
<TR><TD>    Fachhochschule         <TD></TD><TD>  = <TD></TD><TD> &#8216;technical college&#8217;
<TR><TD>    Kunstmuseum            <TD></TD><TD>  = <TD></TD><TD> &#8216;museum of fine art&#8217;
</TABLE></DL>

<li>
<p>
In any case, longer compounds, especially involving personal names, are
frequently hyphenated,
</p>

<DL><DD>    Heinrich-Heine-Universit&auml;t
</DL>

<li>
<p>
It is possible to construct participial adjectives of almost any
length, but they are little used in contemporary German, and regarded now
as poor style.
</p>
</ol>

<h2>History of functional changes to the algorithm</h2>

<ul>
<li>Snowball 2.0.0 (2009-12-11): Extra rule for -nisse ending added
<li>Snowball 3.0.0: Handle ASCII transliterations of umlauts (merging the "german2" variant into the standard algorithm).
<li>Snowball 3.0.0: Special case for <b><i>-system</i></b> added.
<li>Snowball 3.0.0: Replace <b><i>-ln</i></b> and <b><i>-lns</i></b> with <b><i>l</i></b>.
<li>Snowball 3.0.0: Remove <b><i>-erin</i></b> and <b><i>-erinnen</i></b>.
<li>Snowball 3.0.0: Remove <b><i>-et</i></b> when safe to do so.
</ul>

<h2>The stemming algorithm</h2>

<p>
German includes the following accented forms,
</p>

<DL><DD>
    <B><I>ä  &nbsp;  ö  &nbsp;  ü</I></B>
</DL>

<p>
and a special letter, <B><I>ß</I></B>, equivalent to double <B><I>s</I></B>.
</p>

<p>
The following letters are vowels:
</p>

<DL><DD>
    <B><I>a  &nbsp;  e  &nbsp;  i  &nbsp;  o  &nbsp;  u  &nbsp;  y  &nbsp;  ä  &nbsp;  ö  &nbsp;  ü</I></B>
</DL>

<p>
First put <B><I>u</I></B> and <B><I>y</I></B> between vowels into
upper case, and then do the following mappings,
</p>
    <DL><DD>
        (<I>a</I>) replace <B><I>ß</I></B> with <B><I>ss</I></B>,<BR>
        (<I>b</I>) replace <B><I>ae</I></B> with <B><I>ä</I></B>,<BR>
        (<I>c</I>) replace <B><I>oe</I></B> with <B><I>ö</I></B>,<BR>
        (<I>d</I>) replace <B><I>ue</I></B> with <B><I>ü</I></B> unless preceded by <B><I>q</I></B>.
    </DL>

<p>
(The rules here for <B><I>ae</I></B>, <B><I>oe</I></B> and <B><I>ue</I></B> were
added in Snowball 3.0.0, but were previously present as a variant of the
algorithm termed <a href="../german2/stemmer.tt">"german2"</a>).  The condition
on the replacement of <B><I>ue</I></B> prevents the unwanted changing of
<I>quelle</I>.  Also note that <I>feuer</I> is not modified because the first
part of the rule changes it to <I>feUer</I>, so <B><I>ue</I></B> is not
found.)
</p>

<p>
<I>R</I>1 and <I>R</I>2 are first set up in the standard way
(see the <A HREF="../../texts/r1r2.html"> note</A> on <I>R</I>1 and <I>R</I>2),
but then <I>R</I>1 is adjusted so that the region before it contains at least 3 letters.
</p>

<p>
Define a valid <B><I>s</I></B>-ending as one of <B><I>b</I></B>, <B><I>d</I></B>, <B><I>f</I></B>, <B><I>g</I></B>, <B><I>h</I></B>, <B><I>k</I></B>, <B><I>l</I></B>, <B><I>m</I></B>, <B><I>n</I></B>, <B><I>r</I></B> or <B><I>t</I></B>.
</p>

<p>
Define a valid <B><I>st</I></B>-ending as the same list, excluding letter <B><I>r</I></B>.
</p>

<p>
Define a valid <B><I>et</I></B>-ending as one of

<b><i>d</i></b>, <b><i>f</i></b>, <b><i>g</i></b>, <b><i>k</i></b>, <b><i>l</i></b>, <b><i>m</i></b>, <b><i>n</i></b>, <b><i>r</i></b>, <b><i>s</i></b>, <b><i>t</i></b>, <b><i>U</i></b>, <b><i>z</i></b> or <b><i>ä</i></b>.
</p>

<p>
Do each of steps 1, 2 and 3.
</p>

<p>
Step 1:
<DL><DD>
    Search for the longest among the following suffixes,
        <DL><DD>
        (<I>a</I>) <B><I>em</I></B> (not preceded by <B><I>syst</I></B> [condition added in Snowball 3.0.0])<BR>
        (<I>b</I>) <B><I>ern  &nbsp;  er</I></B><BR>
        (<I>c</I>) <B><I>e  &nbsp;  en  &nbsp;  es</I></B><BR>
        (<I>d</I>) <B><I>s</I></B> (preceded by a valid <B><I>s</I></B>-ending)<BR>
        (<I>e</I>) <B><I>erin  &nbsp;  erinnen</I></B> [added in Snowball 3.0.0]<BR>
        (<I>f</I>) <B><I>ln  &nbsp;  lns</I></B> [added in Snowball 3.0.0]
</DL>
    <p>
    and if in <I>R</I>1 then delete (for (a) to (e)) or replace with <I>l</I> (for (f)).
    (Note that only the suffix needs to be in <I>R</I>1, the letter of the
    valid <B><I>s</I></B>-ending is not required to be.)
    <p>

    <p>
    If an ending of group (<I>c</I>) is deleted, and the ending
    is preceded by <B><I>niss</I></B>, delete the final <B><I>s</I></B>.
    </p>

    <p>
    (For example, <I>äckern</I> &#x2192; <I>äck</I>, <I>ackers</I> &#x2192; <I>acker</I>,
    <I>armes</I> &#x2192; <I>arm</I>, <I>bedürfnissen</I> &#x2192; <I>bedürfnis</I>)
    </p>
</DL>
Step 2:
<DL><DD>
    <p>
    Search for the longest among the following suffixes,
    </p>
        <DL><DD>
        (<I>a</I>) <B><I>en  &nbsp;  er  &nbsp;  est</I></B><BR>
        (<I>b</I>) <B><I>st</I></B> (preceded by a valid <B><I>st</I></B>-ending, itself preceded by at least 3<BR>
        (<I>c</I>) <B><I>et</I></B> (preceded by a valid <B><I>et</I></B>-ending,
        itself not preceded any of
            <b><i>geordn</i></b>,
            <b><i>intern</i></b>,
            <b><i>plan</i></b>,
            <b><i>tick</i></b> or
            <b><i>tr</i></b>).
</DL>
    <p>
    and delete the suffix if in <I>R</I>1.
    </p>

    <p>
    (For example, <I>derbsten</I> &#x2192; <I>derbst</I> by step 1, and <I>derbst</I> &#x2192; <I>derb</I> by step
    2, since <B><I>b</I></B> is a valid <B><I>st</I></B>-ending, and is preceded by just 3 letters)
    </p>
</DL>
Step 3: <I>d</I>-suffixes <A HREF="../../texts/glossary.html">(*)</A>
<DL><DD>
    <p>
    Search for the longest among the following suffixes, and perform the
    action indicated.
    </p>
<DL>
    <DT><B><I>end  &nbsp;  ung</I></B>
        <DD>delete if in <I>R</I>2
        <DD>if preceded by <B><I>ig</I></B>, delete if in <I>R</I>2 and not preceded by <B><I>e</I></B>
    <DT><B><I>ig  &nbsp;  ik  &nbsp;  isch</I></B>
        <DD>delete if in <I>R</I>2 and not preceded by <B><I>e</I></B>
    <DT><B><I>lich  &nbsp;  heit</I></B>
        <DD>delete if in <I>R</I>2
        <DD>if preceded by <B><I>er</I></B> or <B><I>en</I></B>, delete if in <I>R</I>1
    <DT><B><I>keit</I></B>
        <DD>delete if in <I>R</I>2
        <DD>if preceded by <B><I>lich</I></B> or <B><I>ig</I></B>, delete if in <I>R</I>2
</DL>
</DL>

<p>
Finally,
</p>

<DL><DD>
    turn <B><I>U</I></B> and <B><I>Y</I></B> back into lower case, and remove the umlaut accent from <B><I>a</I></B>,
    <B><I>o</I></B> and <B><I>u</I></B>.
</DL>

<h2>The same algorithm in Snowball</h2>

[% highlight_file('german') %]

[% footer %]
