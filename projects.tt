[% header %]

<p>
This page lists projects which are related to Snowball in some way.
</p>

<hr>

<h2>Wrappers</h2>

<p>
These projects allow Snowball-generated stemmers to be used from other
languages.
</p>

<p>
Aside from PyStemmer, we've not tested them to see if they successfully wrap
the Snowball-generated code, are well implemented, etc.  These projects aren't
endorsed or recommended as such, but we hope they may be of interest.
</p>

<h3><a href="https://github.com/tebeka/snowball">libstemmer in Go</a></h3>
<p>
(added Feb 2013) Miki Tebeka has ported libstemmer_c to the Go programming
language.
</p>

<h3><a href="https://github.com/snowballstem/pystemmer">PyStemmer</a></h3>

<p>
Richard Boulton put together some new Python bindings for snowball, inspired by
Andreas Jung's initial implementation of PyStemmer from 2001, but with a
different API.  PyStemmer's current home is as part of the snowballstem github
project.
</p>

<h3><a href="http://search.cpan.org/perldoc?Lingua%3A%3AStem%3A%3ASnowball">Lingua::Stem::Snowball</a></h3>
<p>
Lingua::Stem::Snowball is an XS module which provides a Perl interface to the
C versions of the Snowball stemmers.  The Snowball stopwords lists are also
wrapped by <a href="http://search.cpan.org/perldoc?Lingua%3A%3AStopWords"
>Lingua::StopWords</a>.
</p>

<h3><a href="https://github.com/amaccis/php-stemmer">PHP Stemmer</a></h3>
<p>
PHP bindings written by Andrea Maccis, and largely inspired by Richard Boulton's PyStemmer. 
</p>

<h3><a href="https://git.sr.ht/~amz3/guile-snowball-stemmer">guile-snowball-stemmer</a></h3>
<p>
Guile bindings written by Amirouche Boubekki.
</p>

<hr>

<h2>Reimplementations of the Stemming Algorithms</h2>

<p>
These projects reimplement the Snowball algorithms, either in hand-written
code, or in code manually translated from the generated output for another
language.
</p>

<p>
We've not tested them to see if they correctly implement the stemming
algorithms, are well implemented, etc.  These projects aren't endorsed
or recommended as such, but we hope they may be of interest.
</p>

<p>
If you want to use one of these stemmers, we suggest you take the sample
vocabulary for the corresponding natural language, and check that the
stemmer produces the corresponding stemmed output.
</p>

<h3><a href="https://www.oleandersolutions.com/stemming/stemming.html">Oleander Stemming Library</a></h3>
<p>
A reimplementation of the Snowball stemming algorithms in C++.
</p>

<h3><a href="https://bitbucket.org/smassung/porter2_stemmer">English (porter2) Stemmer in C++11</a></h3>
<p>
(added Oct 2012) Sean Massung of the University of Illinois has implemented the porter2 stemmer in
C++11.
</p>

<h3><a href="https://www.nltk.org/">NLTK</a></h3>
<p>
(added June 2010) Python versions of nearly all the stemmers have been made
available by Peter Stahl at NLTK&#8217;s code repository.
</p>

<h3><a href="https://github.com/mazko/jssnowball/">Javascript stemmers</a></h3>
<p>
Javascript versions of nearly all the stemmers, created by Oleg Mazko by hand
from the C/Java output of the Snowball compiler.
</p>

<h3><a href="https://code.google.com/p/js-lingua-stem-ru/">js-lingua-stem-ru</a></h3>
<p>
This is a different implementation of the Russian stemmer in Javascript,
created by Mark A. Prisyazhnyuk.
</p>

<h3><a href="https://github.com/projectEndings/staticSearch/blob/master/xsl/porter2Stemmer.xsl">XSLT 3 Porter2 stemmer</a></h3>
<p>
(added July 2019). Martin Holmes has implemented Porter2 in XSLT 3. In the same repo, there is also a re-implementation
of Porter2 in JavaScript.
</p>

<h3><a href="http://snowball.tartarus.org/otherlangs/">Contributed Stemmers on the old Snowball Website</a></h3>
<p>
Martin and Richard collected and hosted contributed stemmers in a number
of programming languages, which you can still find on the old website.
</p>

<hr>

<h2>Consumers</h2>

<p>
These projects use Snowball stemmers:
</p>

<h3><a href="https://xapian.org/">Xapian</a></h3>
<p>
A probabilistic search engine which supports stemming using Snowball.
</p>

<h3><a href="https://plone.org/products/textindexng3">TextIndexNG</a></h3>
<p>
A fulltext indexing solution for Zope with support for stemming using Snowball.
</p>

<h3><a href="https://code.google.com/p/urim/">urim</a></h3>
<p>
(added Sep 2010) Developed by Oleg Mazko, Urim is a standalone,
offline tag-cloud builder engine, fully written in JavaScript and so
capable of integration into all Internet browsers. Available as
a Firefox add-on. With a JavaScript port of the Snowball stemmers (danish,
dutch, english, finnish, french, german, hungarian, italian,
norwegian, portuguese, russian, spanish, swedish, romanian, turkish)
also available as a separate library ready for developers.
</p>

<h3><a href="http://openfts.sourceforge.net">OpenFTS</a></h3>
<p>
OpenFTS is an advanced PostgreSQL-based search engine, which supports using
Snowball for stemming.
</p>

<h3><a href="https://manticoresearch.com/">Manticore Search</a></h3>
<p>
Manticore Search in an open source search server which supports stemming using Snowball.
</p>

<h2>Snowball support in other tools</h2>

<p>
These projects add Snowball support to other tools, or are tools including
support for Snowball.
</p>

<h3><a href="https://github.com/hajimes/pygments-snowball">Pygments Lexer Plugin for Snowball</a></h3>
<p>
This project adds support for syntax highlighting Snowball code to Pygments, a
syntax highlighter written in Python.
</p>

<hr>
<p>
<a href="lists.html">Contact us</a> if you have a project that you would like to be listed here.
</p>

[% footer %]
